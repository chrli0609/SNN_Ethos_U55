#include <cstddef>
#include <cstdint>

#define CONV2D_TENSOR_ARENA_SIZE 1584


static const uint8_t cms_conv2d_vela_api[] __attribute__((aligned(16))) =
	{


//0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x54, 0x00, 0x30, 0x01, 0x00, 0x00, 0x30, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x01, 0x01, 0x00, 0x31, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x32, 0x40, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x07, 0x00, 0x0c, 0x01, 0xff, 0xff, 0x0a, 0x01, 0x07, 0x00, 0x04, 0x01, 0x0f, 0x00, 0x06, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x01, 0x03, 0x00, 0x1c, 0x01, 0xff, 0xff, 0x1a, 0x01, 0x03, 0x00, 0x12, 0x01, 0x03, 0x00, 0x11, 0x01, 0x03, 0x00, 0x13, 0x01, 0x0f, 0x00, 0x16, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x15, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x14, 0x01, 0x01, 0x00, 0x21, 0x01, 0x01, 0x00, 0x20, 0x01, 0x01, 0x00, 0x22, 0x01, 0x07, 0x00, 0x28, 0x01, 0x01, 0x00, 0x20, 0x40, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x00, 0x21, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x29, 0x01, 0x01, 0x00, 0x22, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x23, 0x40, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0x7f, 0x00, 0x16, 0x01, 0x03, 0x00, 0x15, 0x01, 0x03, 0x00, 0x17, 0x01, 0x0f, 0x00, 0x0d, 0x01, 0x0a, 0x00, 0x2d, 0x01, 0x1e, 0x00, 0x24, 0x01, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff
0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x54, 0x00, 0x30, 0x01, 0x00, 0x00, 0x30, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x01, 0x01, 0x00, 0x31, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x40, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x07, 0x00, 0x0c, 0x01, 0xff, 0xff, 0x0a, 0x01, 0x07, 0x00, 0x04, 0x01, 0x0f, 0x00, 0x06, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x01, 0x03, 0x00, 0x1c, 0x01, 0xff, 0xff, 0x1a, 0x01, 0x03, 0x00, 0x12, 0x01, 0x03, 0x00, 0x11, 0x01, 0x03, 0x00, 0x13, 0x01, 0x0f, 0x00, 0x16, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x15, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x14, 0x01, 0x01, 0x00, 0x21, 0x01, 0x01, 0x00, 0x20, 0x01, 0x01, 0x00, 0x22, 0x01, 0x07, 0x00, 0x28, 0x01, 0x01, 0x00, 0x20, 0x40, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x21, 0x40, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x29, 0x01, 0x01, 0x00, 0x22, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x40, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0x7f, 0x00, 0x16, 0x01, 0x03, 0x00, 0x15, 0x01, 0x03, 0x00, 0x17, 0x01, 0x0f, 0x00, 0x0d, 0x01, 0x0a, 0x00, 0x2d, 0x01, 0x1e, 0x00, 0x24, 0x01, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff


};




const uint8_t * Getconv2dCMSPointer()
{
	return cms_conv2d_vela_api;
}

size_t Getconv2dCMSLen()
{
	return sizeof(cms_conv2d_vela_api);
}



/*
//Weight & Bias compressed array
static const uint8_t weights_conv2d_vela_api[] __attribute__((aligned(16))) = 
{	

	//Bias Stream (16 biases)
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x5d, 0x6e, 0x40, 0x40, 0x1f,
	
	//Weight Stream
	0x03, 0x00, 0x40, 0x00, 0x10, 0x00, 0xfe, 0xfe, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
*/


//Weight & Bias compressed array
static const uint8_t weights_conv2d_vela_api[] __attribute__((aligned(16))) = 
{	

	//Bias Stream (16 biases)
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	
	//Weight Stream
	0xfe, 0x1f, 0x40, 0x11, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};






const uint8_t * Getconv2dWeightsPointer()
{
	return weights_conv2d_vela_api;
}

size_t Getconv2dWeightsLen()
{
	return sizeof(weights_conv2d_vela_api);
	//return 768;
}