#include <cstddef>
#include <cstdint>





static const uint8_t weights_matmul_vela[] __attribute__((aligned(16))) = 
{

//biases:
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,

//weights:
 0xfe, 0x1f, 0x5c, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};





#define MATMUL_VELA_TENSOR_ARENA_SIZE 640
#define MATMUL_VELA_INPUT_TENSOR_SIZE 16
#define MATMUL_VELA_OUTPUT_TENSOR_SIZE 32 




/*
Warning: No configuration file specified. Using a default of ['/home/chris/.local/lib/python3.10/site-packages/ethosu/config_files/Arm/vela.ini']. Compilation may be invalid or non-optimal.
Warning: No system configuration specified. Using a default of Ethos_U55_High_End_Embedded. Compilation may be invalid or non-optimal.
Warning: No memory mode specified. Using a default of Shared_Sram. Compilation may be invalid or non-optimal.
*/




static const uint8_t cms_matmul_vela[] __attribute__((aligned(16))) = 
{
	0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x6a, 0x00, 
0x0f, 0x01, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0x04, 0x01, 0x0f, 0x00, 0x06, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x00, 
0x10, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 
0x03, 0x01, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x01, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 
0x13, 0x01, 0x0f, 0x00, 0x16, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x15, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x01, 0x80, 0xff, 
0x14, 0x01, 0x41, 0x01, 0x21, 0x01, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 0x26, 0x01, 0x80, 0xff, 0x27, 0x01, 0x7f, 0x00, 0x16, 0x01, 0x01, 0x00, 
0x15, 0x01, 0x01, 0x00, 0x17, 0x01, 0x0f, 0x00, 0x0d, 0x01, 0x0a, 0x00, 0x2d, 0x01, 0x1e, 0x00, 0x24, 0x01, 0x00, 0x00, 0x24, 0x40, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2f, 0x01, 0x00, 0x00, 
0x05, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x06, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x01, 0x80, 0xff, 0x05, 0x01, 0x41, 0x00, 0x10, 0x40, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x13, 0x01, 0x1f, 0x00, 0x15, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x14, 0x01, 0x41, 0x00, 0x28, 0x01, 0x00, 0x00, 0x20, 0x40, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 
0x21, 0x40, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 0x22, 0x40, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x23, 0x40, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x17, 0x01, 0x1f, 0x00, 
0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x1f, 0x00, 0x05, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
0x16, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x14, 0x01, 0x00, 0x01, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0xff, 0x00, 
0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff,

};








const uint8_t * GetMatMulVelaCMSPointer()
{
	return cms_matmul_vela;
}

size_t GetMatMulVelaCMSLen()
{
	return sizeof(cms_matmul_vela);
}





const uint8_t * GetMatMulVelaWeightsPointer()
{
	return weights_matmul_vela;
}

size_t GetMatMulVelaWeightsLen()
{
	return sizeof(weights_matmul_vela);
}


//Current Block Config is legal: NpuShape3D(height=2, width=2, depth=16)
