#include <cstddef>
#include <cstdint>

//#define ELEMENTWISE_ADD_TENSOR_ARENA_SIZE 48
//#define ELEMENTWISE_ADD_INPUT1_TENSOR_SIZE 16
//#define ELEMENTWISE_ADD_INPUT2_TENSOR_SIZE 16
//#define ELEMENTWISE_ADD_OUTPUT_TENSOR_SIZE 16



#define ELEMENTWISE_ADD_TENSOR_ARENA_SIZE 768
#define ELEMENTWISE_ADD_INPUT1_TENSOR_SIZE 256
#define ELEMENTWISE_ADD_INPUT2_TENSOR_SIZE 256
#define ELEMENTWISE_ADD_OUTPUT_TENSOR_SIZE 256





static const uint8_t cms_elementwise_add[] __attribute__((aligned(16))) =
    {


        0x43, 0x4f, 0x50, 0x31, 0x01, 0x00, 0x10, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x06, 0x10, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x55, 0x00, 0x25, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x26, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x24, 0x40, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0f, 0x01, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x03, 0x00, 0x0c, 0x01, 0xff, 0xff, 0x0a, 0x01, 0x03, 0x00, 0x04, 0x01, 0x0f, 0x00, 0x06, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x05, 0x01, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x1f, 0x01, 0x01, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x01, 0x03, 0x00, 0x1c, 0x01, 0xff, 0xff, 0x1a, 0x01, 0x03, 0x00, 0x12, 0x01, 0x03, 0x00, 0x11, 0x01, 0x03, 0x00, 0x13, 0x01, 0x0f, 0x00, 0x16, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x14, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x14, 0x01, 0x01, 0x01, 0x25, 0x01, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 0x27, 0x01, 0x7f, 0x00, 0x16, 0x01, 0x03, 0x00, 0x15, 0x01, 0x03, 0x00, 0x17, 0x01, 0x0f, 0x00, 0x0d, 0x01, 0x2e, 0x00, 0x2d, 0x01, 0x2e, 0x00, 0x8d, 0x01, 0x0a, 0x00, 0x24, 0x01, 0x00, 0x00, 0x8f, 0x01, 0x01, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x01, 0x03, 0x00, 0x8c, 0x01, 0xff, 0xff, 0x8a, 0x01, 0x03, 0x00, 0x86, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x40, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00, 0x85, 0x01, 0x01, 0x00, 0x80, 0x01, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff



    };
        

  const uint8_t * GetElementwiseAddCMSPointer()
  {
      return cms_elementwise_add;
  }
  
  size_t GetElementwiseAddCMSLen()
  {
      return sizeof(cms_elementwise_add);
  }